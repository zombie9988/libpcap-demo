// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: alert.proto

#include "alert.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace alerts {

inline constexpr Result::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : res_type_{static_cast< ::alerts::Result_ResultType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Result::Result(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResultDefaultTypeInternal() {}
  union {
    Result _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResultDefaultTypeInternal _Result_default_instance_;

inline constexpr Alert::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : d_ip_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        src_ip_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        date_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        rule_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        rule_type_{static_cast< ::alerts::Alert_RuleType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Alert::Alert(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AlertDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AlertDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AlertDefaultTypeInternal() {}
  union {
    Alert _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AlertDefaultTypeInternal _Alert_default_instance_;
}  // namespace alerts
static ::_pb::Metadata file_level_metadata_alert_2eproto[2];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_alert_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_alert_2eproto = nullptr;
const ::uint32_t TableStruct_alert_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::alerts::Alert, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::alerts::Alert, _impl_.d_ip_),
    PROTOBUF_FIELD_OFFSET(::alerts::Alert, _impl_.src_ip_),
    PROTOBUF_FIELD_OFFSET(::alerts::Alert, _impl_.rule_type_),
    PROTOBUF_FIELD_OFFSET(::alerts::Alert, _impl_.date_),
    PROTOBUF_FIELD_OFFSET(::alerts::Alert, _impl_.rule_name_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::alerts::Result, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::alerts::Result, _impl_.res_type_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::alerts::Alert)},
        {13, -1, -1, sizeof(::alerts::Result)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::alerts::_Alert_default_instance_._instance,
    &::alerts::_Result_default_instance_._instance,
};
const char descriptor_table_protodef_alert_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\013alert.proto\022\006alerts\"\253\001\n\005Alert\022\014\n\004d_ip\030"
    "\001 \001(\t\022\016\n\006src_ip\030\002 \001(\t\022)\n\trule_type\030\003 \001(\016"
    "2\026.alerts.Alert.RuleType\022\014\n\004date\030\004 \001(\t\022\021"
    "\n\trule_name\030\005 \001(\t\"8\n\010RuleType\022\r\n\tRULE_NO"
    "TE\020\000\022\r\n\tRULE_WARN\020\001\022\016\n\nRULE_ALERT\020\002\"\\\n\006R"
    "esult\022+\n\010res_type\030\001 \001(\0162\031.alerts.Result."
    "ResultType\"%\n\nResultType\022\n\n\006RES_OK\020\000\022\013\n\007"
    "RES_ERR\020\0012=\n\rAlertCapturer\022,\n\tSendAlert\022"
    "\r.alerts.Alert\032\016.alerts.Result\"\000b\006proto3"
};
static ::absl::once_flag descriptor_table_alert_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_alert_2eproto = {
    false,
    false,
    360,
    descriptor_table_protodef_alert_2eproto,
    "alert.proto",
    &descriptor_table_alert_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_alert_2eproto::offsets,
    file_level_metadata_alert_2eproto,
    file_level_enum_descriptors_alert_2eproto,
    file_level_service_descriptors_alert_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_alert_2eproto_getter() {
  return &descriptor_table_alert_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_alert_2eproto(&descriptor_table_alert_2eproto);
namespace alerts {
const ::google::protobuf::EnumDescriptor* Alert_RuleType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_alert_2eproto);
  return file_level_enum_descriptors_alert_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t Alert_RuleType_internal_data_[] = {
    196608u, 0u, };
bool Alert_RuleType_IsValid(int value) {
  return 0 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Alert_RuleType Alert::RULE_NOTE;
constexpr Alert_RuleType Alert::RULE_WARN;
constexpr Alert_RuleType Alert::RULE_ALERT;
constexpr Alert_RuleType Alert::RuleType_MIN;
constexpr Alert_RuleType Alert::RuleType_MAX;
constexpr int Alert::RuleType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Result_ResultType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_alert_2eproto);
  return file_level_enum_descriptors_alert_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t Result_ResultType_internal_data_[] = {
    131072u, 0u, };
bool Result_ResultType_IsValid(int value) {
  return 0 <= value && value <= 1;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Result_ResultType Result::RES_OK;
constexpr Result_ResultType Result::RES_ERR;
constexpr Result_ResultType Result::ResultType_MIN;
constexpr Result_ResultType Result::ResultType_MAX;
constexpr int Result::ResultType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class Alert::_Internal {
 public:
};

Alert::Alert(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:alerts.Alert)
}
inline PROTOBUF_NDEBUG_INLINE Alert::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : d_ip_(arena, from.d_ip_),
        src_ip_(arena, from.src_ip_),
        date_(arena, from.date_),
        rule_name_(arena, from.rule_name_),
        _cached_size_{0} {}

Alert::Alert(
    ::google::protobuf::Arena* arena,
    const Alert& from)
    : ::google::protobuf::Message(arena) {
  Alert* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.rule_type_ = from._impl_.rule_type_;

  // @@protoc_insertion_point(copy_constructor:alerts.Alert)
}
inline PROTOBUF_NDEBUG_INLINE Alert::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : d_ip_(arena),
        src_ip_(arena),
        date_(arena),
        rule_name_(arena),
        _cached_size_{0} {}

inline void Alert::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.rule_type_ = {};
}
Alert::~Alert() {
  // @@protoc_insertion_point(destructor:alerts.Alert)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Alert::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.d_ip_.Destroy();
  _impl_.src_ip_.Destroy();
  _impl_.date_.Destroy();
  _impl_.rule_name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Alert::Clear() {
// @@protoc_insertion_point(message_clear_start:alerts.Alert)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.d_ip_.ClearToEmpty();
  _impl_.src_ip_.ClearToEmpty();
  _impl_.date_.ClearToEmpty();
  _impl_.rule_name_.ClearToEmpty();
  _impl_.rule_type_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Alert::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 44, 2> Alert::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Alert_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string d_ip = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Alert, _impl_.d_ip_)}},
    // string src_ip = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Alert, _impl_.src_ip_)}},
    // .alerts.Alert.RuleType rule_type = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Alert, _impl_.rule_type_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Alert, _impl_.rule_type_)}},
    // string date = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Alert, _impl_.date_)}},
    // string rule_name = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Alert, _impl_.rule_name_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string d_ip = 1;
    {PROTOBUF_FIELD_OFFSET(Alert, _impl_.d_ip_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string src_ip = 2;
    {PROTOBUF_FIELD_OFFSET(Alert, _impl_.src_ip_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .alerts.Alert.RuleType rule_type = 3;
    {PROTOBUF_FIELD_OFFSET(Alert, _impl_.rule_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string date = 4;
    {PROTOBUF_FIELD_OFFSET(Alert, _impl_.date_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string rule_name = 5;
    {PROTOBUF_FIELD_OFFSET(Alert, _impl_.rule_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\14\4\6\0\4\11\0\0"
    "alerts.Alert"
    "d_ip"
    "src_ip"
    "date"
    "rule_name"
  }},
};

::uint8_t* Alert::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:alerts.Alert)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string d_ip = 1;
  if (!this->_internal_d_ip().empty()) {
    const std::string& _s = this->_internal_d_ip();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "alerts.Alert.d_ip");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string src_ip = 2;
  if (!this->_internal_src_ip().empty()) {
    const std::string& _s = this->_internal_src_ip();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "alerts.Alert.src_ip");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // .alerts.Alert.RuleType rule_type = 3;
  if (this->_internal_rule_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_rule_type(), target);
  }

  // string date = 4;
  if (!this->_internal_date().empty()) {
    const std::string& _s = this->_internal_date();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "alerts.Alert.date");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string rule_name = 5;
  if (!this->_internal_rule_name().empty()) {
    const std::string& _s = this->_internal_rule_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "alerts.Alert.rule_name");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:alerts.Alert)
  return target;
}

::size_t Alert::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:alerts.Alert)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string d_ip = 1;
  if (!this->_internal_d_ip().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_d_ip());
  }

  // string src_ip = 2;
  if (!this->_internal_src_ip().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_src_ip());
  }

  // string date = 4;
  if (!this->_internal_date().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_date());
  }

  // string rule_name = 5;
  if (!this->_internal_rule_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_rule_name());
  }

  // .alerts.Alert.RuleType rule_type = 3;
  if (this->_internal_rule_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_rule_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Alert::_class_data_ = {
    Alert::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Alert::GetClassData() const {
  return &_class_data_;
}

void Alert::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Alert*>(&to_msg);
  auto& from = static_cast<const Alert&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:alerts.Alert)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_d_ip().empty()) {
    _this->_internal_set_d_ip(from._internal_d_ip());
  }
  if (!from._internal_src_ip().empty()) {
    _this->_internal_set_src_ip(from._internal_src_ip());
  }
  if (!from._internal_date().empty()) {
    _this->_internal_set_date(from._internal_date());
  }
  if (!from._internal_rule_name().empty()) {
    _this->_internal_set_rule_name(from._internal_rule_name());
  }
  if (from._internal_rule_type() != 0) {
    _this->_internal_set_rule_type(from._internal_rule_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Alert::CopyFrom(const Alert& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alerts.Alert)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Alert::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Alert::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Alert::InternalSwap(Alert* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.d_ip_, &other->_impl_.d_ip_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.src_ip_, &other->_impl_.src_ip_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.date_, &other->_impl_.date_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.rule_name_, &other->_impl_.rule_name_, arena);
  swap(_impl_.rule_type_, other->_impl_.rule_type_);
}

::google::protobuf::Metadata Alert::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_alert_2eproto_getter, &descriptor_table_alert_2eproto_once,
      file_level_metadata_alert_2eproto[0]);
}
// ===================================================================

class Result::_Internal {
 public:
};

Result::Result(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:alerts.Result)
}
Result::Result(
    ::google::protobuf::Arena* arena, const Result& from)
    : Result(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Result::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Result::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.res_type_ = {};
}
Result::~Result() {
  // @@protoc_insertion_point(destructor:alerts.Result)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Result::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Result::Clear() {
// @@protoc_insertion_point(message_clear_start:alerts.Result)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.res_type_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Result::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> Result::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Result_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .alerts.Result.ResultType res_type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Result, _impl_.res_type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Result, _impl_.res_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .alerts.Result.ResultType res_type = 1;
    {PROTOBUF_FIELD_OFFSET(Result, _impl_.res_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Result::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:alerts.Result)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .alerts.Result.ResultType res_type = 1;
  if (this->_internal_res_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_res_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:alerts.Result)
  return target;
}

::size_t Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:alerts.Result)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .alerts.Result.ResultType res_type = 1;
  if (this->_internal_res_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_res_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Result::_class_data_ = {
    Result::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Result::GetClassData() const {
  return &_class_data_;
}

void Result::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Result*>(&to_msg);
  auto& from = static_cast<const Result&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:alerts.Result)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_res_type() != 0) {
    _this->_internal_set_res_type(from._internal_res_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Result::CopyFrom(const Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alerts.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Result::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Result::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Result::InternalSwap(Result* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.res_type_, other->_impl_.res_type_);
}

::google::protobuf::Metadata Result::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_alert_2eproto_getter, &descriptor_table_alert_2eproto_once,
      file_level_metadata_alert_2eproto[1]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace alerts
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
